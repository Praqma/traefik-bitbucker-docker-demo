version: "3.3"

services:
  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.bitbucket-ssh.address=:7999"
      - "--entrypoints.web.address=:443"
      - "--certificatesresolvers.route53.acme.dnschallenge=true"
      - "--certificatesresolvers.route53.acme.dnschallenge.provider=route53"
      - "--certificatesresolvers.route53.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.route53.acme.email=${AWS_ACCOUNT_EMAIL}"
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID} 
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    ports:
      - "443:443"
      - "8080:8080"
      - "7999:7999"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - letsencrypt:/letsencrypt
    restart: unless-stopped
    depends_on: 
      - bitbucket
    stop_grace_period: 30s
  postgres:
    image: postgres:9.5-alpine
    container_name: postgres-bitbucket
    ports:
      - ${BITBUCKET_DB_PORT}:5432
    environment:
      POSTGRES_DB: ${BITBUCKET_DB:-bitbucket}
      POSTGRES_USER: ${BITBUCKET_DB_USER:-bitbucket}
      POSTGRES_PASSWORD: ${BITBUCKET_DB_PASSWORD:-""}
    volumes:
      - db:/var/lib/postgresql/data
    restart: unless-stopped
    stop_grace_period: 30s
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
  bitbucket:
    image: atlassian/bitbucket-server:7.0.2
    container_name: bitbucket
    labels:
      - "traefik.enable=true"
      # Web
      - "traefik.http.routers.router1.rule=Host(`$SERVER_PROXY_NAME`)"
      - "traefik.http.routers.router1.tls=true"
      - "traefik.http.routers.router1.tls.certresolver=route53"
      - "traefik.http.routers.router1.entrypoints=web"
      - "traefik.http.routers.router1.service=bitbucket-web"
      - "traefik.http.services.bitbucket-web.loadbalancer.server.port=7990"
      # SSH
      - "traefik.tcp.routers.router2.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.router2.entrypoints=bitbucket-ssh"
      - "traefik.tcp.routers.router2.service=bitbucket-ssh"
      - "traefik.tcp.services.bitbucket-ssh.loadbalancer.server.port=7999"
    environment:
      SERVER_PROXY_NAME: ${SERVER_PROXY_NAME}
      SERVER_PROXY_PORT: ${SERVER_PROXY_PORT}
      SERVER_SCHEME: ${SERVER_SCHEME}
      SERVER_SECURE: ${SERVER_SECURE}
      JVM_MINIMUM_MEMORY: ${JVM_MINIMUM_MEMORY:-512m}
      JVM_MAXIMUM_MEMORY: ${JVM_MAXIMUM_MEMORY:-1024m}
    volumes:
      - data:/var/atlassian/application-data/bitbucket
    restart: unless-stopped
    stop_grace_period: 1m30s
    depends_on: 
     - postgres
volumes:
  letsencrypt: {}
  data: {}
  db: {}